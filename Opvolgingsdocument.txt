=================================================================================

Persoonlijk ontwikkelingsplan (POP) - opvolgingsdocument Academiejaar 2022-2023

=================================================================================




Student:	Jonathan Vercammen

Mentor:		Joris Maervoet


=================================================================================
Beschrijving - datum (1) 24/09/2022 	(2) 29/09/2022
=================================================================================

Onderwerp:

	2D/3D procedureel gegenereerd terrein (Procedurally Generated Terrain: PGT) 


Einddoelen (met evaluatiecriteria):

1. einddoel 1
	Toepassen van PGT
		- Demo maken waarbij terrein wordt gegenereerd met verschillende instelbare parameters om te zien wat het effect ervan is. (minstens vijf)
2. einddoel 2
	Begrijpen en kunnen uitleggen hoe PGT werkt
		- Verslag schrijven over de werking van PGT. (minstens zeven bladzijdes?)
3. einddoel 3
	Leren over verschillende soorten random algoritmen, noise generators
		- Zoeken op het internet naar verschillende noisefuncties en een kleine toepassing 			schrijven om het verschil te illustreren, eventueel gecombineerd met de demo.
		- Extra uitleg over minstens twee (drie?) noisefuncties met voor- en nadelen.
		
		

Motivatie - betrokkenheid:

Deze keer kies ik ervoor om een complexer topic in game development aan te pakken.
Ik heb altijd al interesse gehad voor games die zo goed als oneindig aanvoelen maar nooit saai zijn.



Motivatie - grenzen verleggen:

PGT is iets helemaal nieuws voor mij maar ik hoop dat ik deze techniek kan beheersen voor gebruik in latere projecten.



Motivatie - professioneel profiel:

Later zou ik graag werken in de gaming industrie of als indie developer



kerndoelen: 

1.a: 	De student realiseert onderstaande kerndoelen binnen het deelgebied van de
	programmatie en gegevensbanken. 
2.a:	De student kan zelfstandig een complex technologisch probleem opsplitsen in een aantal
	concrete en hanteerbare deelproblemen. 
3.b: 	De student kan de goede werking van een complex systeem evalueren. 
6.e:  	De student kan een voorgestelde aanpak, oplossing of aanbeveling op een
	gestructureerde manier verantwoorden op basis van eigen onderzoek, kennis en inzicht
	en beoordeling van voor- en nadelen.
8.i:	De student maakt een duidelijk verslag van uitgevoerde taken en opgestelde conclusies.
10.m:	De student kan tekorten in de eigen kennis of competentie identificeren en neemt
	initiatief om ze te remedi√´ren. 
10.n:	De student verzamelt voldoende informatie over nieuwe ontwikkelingen binnen een
	(deel)gebied van Elektronica/ICT en kan argumenteren over belang ervan. 


Werkvormen:

Eerst ga ik op zoek naar informatie over PGT en verschillende noisefuncties.
Aansluitend kan ik die informatie al in het verslag verwerken.

Daarna zal ik experimenteren met noisefuncties in Unity en proberen omo iets visueels te kunnen tonen. Evenuteel ook al verschillende noisefuncties vergelijken met elkaar.

Nadat ik voldoende informatie heb verzameld, ga ik aan de slag met mijn hoofdproject: terrein genereren. Dit kan op twee manieren: ofwel puntsgewijs om een natuurlijk terrein te vormen of ik kan terrein genereren met verchillende vormen zoals bv. in Minecraft.
Vanaf ik een grondige basis heb, kan ik verder uitbreiden met extra "materialen" of elementen die ik kan sturen met parameters.

Ten slotte werk ik mijn verslag verder af met alle ervaring die ik heb opgedaan tijdens dit project.


Antwoord feedback 29/09/2022:
Ik ben nog niet volledig zeker welke bronnen ik ga gebruiken maar na een beetje rond te zoeken heb ik toch een redelijke lijst opgestelt.
De site van PCGBook lijkt mij ook interresant om eens door te nemen. Dan kijk ik vooral naar hoofdstukken 1, 2, 4 en 5.
Artikels:
	- http://pcgbook.com/
	- https://developer.nvidia.com/gpugems/gpugems3/part-i-geometry/chapter-1-generating-complex-procedural-terrains-using-gpu
	- https://www.alanzucconi.com/2022/06/05/minecraft-world-generation/
	- (Thesis) https://s3.eu-central-1.amazonaws.com/ucu.edu.ua/wp-content/uploads/sites/8/2021/07/	Melnychuk-Vladyslav_188572_assignsubmission_file_VladyslavMelnychuk.pdf

Videos informatie 
	Algemeen:
		- How does procedural generation work? | Bitwise (https://www.youtube.com/watch?v=-POwgollFeY)
		- Procedural World Generation | How does it work? (https://www.youtube.com/watch?v=Pgt82G4Jxac)
		- How Procedurally Generated Terrain Works (https://www.youtube.com/watch?v=JdYkcrW8FBg)
	Gamespecifiek (Minecraft)
		- THIS is how Minecraft Works üíé‚õèÔ∏è (https://www.youtube.com/watch?v=YyVAaJqYAfE)
		- How Minecraft Generates Massive Virtual Worlds from Scratch (https://www.youtube.com/watch?v=FcxYTe31isA)
		- Minecraft terrain generation in a nutshell (https://www.youtube.com/watch?v=CSa5O6knuwI)
Tutorials
	- Infinite Procedural Terrain in Unity (https://www.youtube.com/watch?v=f9uueg_AUZs)
	- (Serie) Procedural voxel terrain generation in Unity #1 - Creating a cube! (https://www.youtube.com/watch?v=lyDJPVp7Oc8)
	- (Serie) Unity Voxels - Procedural Generation Tutorial - Part 1: The First Cube (https://www.youtube.com/watch?v=EubjobNVJdM)


Feedback mentor - 27/09/2022
----------------------------
Dag Jonathan,

- de belangrijkste bedoeling van POP is niet om een leuke toepassing te maken. De nadruk van POP ligt zowel op kennisverwerving als op de toepassing ervan. Daarom verwachten we √©√©n of meerdere einddoelen die specifiek gericht zijn op het gestructureerd bijleren van een aantal zaken (die heb je niet). We willen daar echt kunnen lezen w√°t je wil bijleren en hoe je dat zal doen (cursus, eigen verzameling tutorials/documentatie, boek, conferentie, .... ) en hoe je dat zal bewijzen (certificaat, notities, gemaakte oefeningen, een rapport, ....).

- we kijken dan in de eerste plaats naar de zaken die je gaat bijleren. Opgelet:
  - het louter leren gebruiken van een tool/programma (Trello, ...) vinden we niet geschikt voor POP
  - het louter leren werken met een game engine (Unity, ...) vinden we niet geschikt voor POP
  - het louter aanleren van een andere programmeertaal vinden we niet geschikt voor POP
  ik vrees dus dat je onderwerp niet geschikt is voor POP, tenzij je een hele andere leerinsteek hebt die bv. vertrekt van AI/path finding of bv. van een studie van design patterns ...

- Je einddoelen/evaluatiecriteria (SMART!) zijn onvoldoende meetbaar/toetsbaar en onvoldoende concreet. Hou hier rekening mee als je je voorstel aanpast!

Samengevat: ik vrees dus dat we dit onderwerp niet kunnen toelaten, tenzij je een andere insteek hebt.

Bekijk jij dit en pas je je voorstel aan? Alvast bedankt.


Feedback mentor - 29/09/2022
----------------------------
Dag Jonathan,
je hebt dit voorstel sterk verbeterd. Super!
Het enige waar ik nu nog mee zit is de moeilijkheidsgraad (PGT en random algoritmen zijn meestal eenvoudigere algoritmen) en de hoeveelheidwerk (+/- 100u verwacht). Want worst case zoek je in een paar uurtjes een paar algoritmen op, plaats je ze in het verslag, en maak je op een halve dag een demo van het makkelijkste algoritme.
Kan je daarom ergens aangeven welke cursussen/tutorials/bronnen (of welke stukken ervan) je in je verslagen zal verwerken? (het kan geen kwaad om eens een beetje meer de theoretisch kant op te zoeken zie bv http://pcgbook.com/)


Goedkeuring mentor - 30/09/2022
-------------------------------
goedgekeurd! veel succes!
(Ik heb dit goedgekeurd op basis van je einddoelen + antwoord op de feedback. We gaan ervan uit dat je zelf een beetje de hoeveelheid werk en moeilijkheidsgraad managet.)


=================================================================================
Planning - 05-11-2022 (op te stellen nadat je voorstel is goedgekeurd)
=================================================================================

<Hou hier je werkplanning bij, op te stellen nadat je voorstel is goedgekeurd>

Deadline 1: zondag 20 november
	Theoretische uitleg verslag klaar t.e.m. hoofdstuk 3 Perlin noise
	Unity demo's van random noise, value noise, simplex noise, Perlin noise en fractal noise
Deadline 2: zondag 27 november
	Beginnen aan hoofdstuk 4 Procedurally generated terrain
	Eerste kubus maken
	Vlak oneindig landschap met die kubus maken
Deadline 3: zondag 11 december
	Perlin noise implementeren in terrain generation
Deadline 4: zondag 25 december
	Terrein verbeteren met fractal noise, gebruik van parameters!
Deadline 5: zondag 8 januari
	Verslag compleet
	Volledige Unity-applicatie waarin je een wereld kan maken met een seed.
	Aan de hand daarvan wordt een wereld gegenereerd.

=================================================================================
Planning - 14-11-2022 
=================================================================================

Sperweek (14/11 - 20/11)
	Verslag verder schrijven t.e.m. hoofdstuk 3 Perlin noise
	Unity demo's maken van random noise, value noise, simplex noise, Perlin noise en fractal noise

Week 8 (21/11 - 27/11)
	Beginnen aan hoofdstuk 4 Procedurally generated terrain
	Starten met hoofd-Unity-project (PGT):
	Eerste kubus maken en deze gebruiken om een vlak oneindig landschap te maken

Week 9 (28/11 - 4/12)
	Terrein laten vari√´ren met parameters zoals seed
	Experimenteren met verschillende noisefuncties en kijken welke het beste resultaat oplevert

Week 10 (5/12 - 11/12)
	Noise parameters opstellen voor de verschillende lagen noise
	Deze parameters in het project integreren
	Maken van andere soorten blokken voor extra variatie (biomes)

Week 11 (12/12 - 18/12)
	
	Andere blokken gebruiken op basis van een noise map (biomes)
	Parameters fine-tunen	

Week 12 (19/12 - 25/12)
	Rivieren en andere decoraties toevoegen

Kerstvakantie (26/12 - 1/01)
	Laatste details afwerken

Kerstvakantie (2/01 - 8/01)
	Laatste details afwerken	

=================================================================================
Logboek
=================================================================================

<Noteer hier je activiteiten, gevonden informatie, behaalde milestones, 
belangrijke gebeurtenissen, problemen, oplossingen...
Zet voor elke nieuwe entry op een aparte lijn je naam en de datum.
Als je dat wil, mag je de zuiver technische informatie in een aanvullend 'technisch logboek'
bijhouden (binnen je repository). In dat geval kan je hier bij de verschillende entries verwijzen
naar dat technisch logboek.>


16-10: 	Schrijven hoofdstuk 2.1 Noisefuncties - Introductie
5-11:	Schrijven hoofdstuk 2.2 Noisefuncties - Noise
	Schrijven hoofdstuk 2.3 Noisefuncties - Random Number Generator (RNG)
	Schrijven hoofdstuk 2.4 Noisefuncties - Random noise
6-11:	Schrijven hoofdstuk 2.5 Noisefuncties - Value noise - inleiding
14-11:	Beginnen Unity demo random noise
	Beginnen Unity demo value noise
15-11: 	Schrijven hoofdstuk 2.5.1 Noisefuncties - Value noise - Werking
16-11: 	Herschikken hoofdstukken perlin-, simplex- en fractal noise
		Na verder onderzoek besluit ik om niet al te theoretisch in te gaan op Perlin/simplex noise. 
		Dit zou veel te lang duren en is net iets te complex voor mij om te begrijpen.
		https://adrianb.io/2014/08/09/perlinnoise.html
		Voorlopig houd ik mij bij een basisuitleg. Zaken zoals fractal noise zullen belangrijker zijn voor procedural generation.
19-11: 	Schrijven hoofdstuk 2.6 Perlin noise
20-11:	Schrijven hoofdstuk 2.7 Simplex noise
	Schrijven hoofdstuk 3	Fractal noise	
	
	



=================================================================================
Eerste tussenrapportering - 05-11-2022
=================================================================================

Stand van zaken:

<Geef hier een korte stand van zaken van wat er gebeurd is sinds de start: 
Wat is er gerealiseerd? Wat moet nog gebeuren? Wat zijn bijzondere gebeurtenissen?
Wat zijn problemen die je nog moet oplossen?>

	Qua informatie heb ik al veel opgezocht en ik begin noise en procedural generation beter te snappen.
	Voor de rest is er eigenlijk niet veel gebeurd. Ik moet nog in mijn verslag het theoretisch deel verder uitwerken
	en ook de minidemo's in Unity maken voor alles noisefuncties van het verslag.
	Ook mijn procedurally generated terrain moet ik nog aan beginnen.

Reflectie:

<Hoe werkt je aanpak? Waar had je achteraf gezien beter anders te werk kunnen gaan?
Hoe ga je eventueel bijsturen? Welke aanpassingen zijn er nodig in je planning?>
	
	Voorlopig ben ik niet blij met hoever ik sta maar volgens mij heeft dit veel te maken met de hoeveelheid tijd die ik
	in andere vakken moet steken. Gelukkig komt er stillaan een einde aan al het werk.

	In het begin ging het verslag zeer moeizaam omdat ik niet zo goed ben in het schrijven van onpersoonlijke teksten.
	Dit begint nu gelukkig beter te gaan dus ik verwacht niet al te veel problemen meer.
	
	Voor Mobile App Development ga ik meer focussen op het project en minder op de labo's aangezien die op weinig punten staan.
	Voor Applied Programming heb ik net mijn laatste labo afgekregen dus daar ben ik ook van af.
	
	Binnen twee weken is er een sperweek die ik volledig kan en ga inzetten voor dit vak en Mobile App Development.
	Na het einde van de sperweek verwacht ik zeker klaar te zijn met alle theoretische uitleg in het verslag samen met de bijhorende
	minidemo's in Unity. Eventueel kan ik al beginnen met het grote project: de procedurally generated terrain.

Zelfevaluatie:

<Geef jezelf hier een score (gaande van 'NVT' tot 'A') voor de items die in het 
evaluatiedocument een witte achtergrond hebben>

	(zie document 'Tussentijdse Evaluatiedocument 5-11 POP.pdf', dit had ik beter op voorhand gezet)

Feedback vanwege mentor - 09/11/2022:

Dag Jonathan,

je hebt een interessant traject uitgestippeld, maar zoals je zelf weet, heb je zeer veel achterstand.
 - graag hadden we je planning eerder op weekniveau. (geen deadlines, maar een beschrijving van wat je wanneer plant te doen, over het hele semester). voor het logboek verwachten we dan weer een log van al je activiteiten
 - de stijl van je stand van zaken is ok. voor de reflectie verwachten we vooral ene bespreking van je persoonlijke inhoudelijke aanpak (bv. welke onderwerpen gingen goed? geschikte manier van leren voor mij .... enz.)
 - we hadden zelfevaluatiescores verwacht ("nieuw verworven kennis" A/B/C/D/E, ... zie document op Toledo) die ontbreken nu. Vergeet deze zeker niet bij je eindevaluatie want dat kan je punten kosten.

Probeer voldoende tijd vrij te maken voor POP en veel succes!


=================================================================================
Eindrapportering - <datum van ingave>
=================================================================================


Eindrapportering:

<Geef hier een eindstand van wat je bereikt hebt (en wat niet).
Hierin verwijs je ook naar eventuele bijkomende documenten of informatie om dit te onderbouwen.>

Reflectie:

<Geef hier een reflectie over je aanpak, je originele einddoelen, en je resultaat: Wat was goed?
 Wat had beter gekund? Waren er alternatieven voor je aanpak? Wat zou je achteraf gezien anders
 gedaan hebben? Hoe zou je je nog verder kunnen profileren in de richting van je onderwerp? >


Inhoud Portfolio:

<Geef hier een overzicht van de informatie die je portfolio bevat> 


Bronnenlijst:

<Geef hier een lijst van gebruikte bronnen volgens de IEEE-standaard>

Zelfevaluatie:

<Geef jezelf hier een score (gaande van 'NVT' tot 'A') voor de items die in het 
evaluatiedocument een witte achtergrond hebben>








